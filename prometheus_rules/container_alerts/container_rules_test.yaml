# Tests for container alerts

rule_files:
  - container_rules.yaml

evaluation_interval: 1m

tests:
    #TC 1 - ContainerWaiting
    # Test alert doesn't fire when the value for kube_pod_container_status_waiting_reason is 0
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="CreateContainerConfigError",pod="index",container="alpine"}'
            values: '0x15'
      alert_rule_test:
          - eval_time: 15m
            alertname: ContainerWaiting
            exp_alerts: []

    # Test the alert fires if the alert has been firing for 15 minutes
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="CreateContainerConfigError",pod="index",container="alpine"}'
            values: '1x25'
      alert_rule_test:
          - eval_time: 30m
            alertname: ContainerWaiting
            exp_alerts:
                - exp_labels:
                      severity: P3-Minor
                      scope: namespace
                      container: alpine
                      pod: index
                      reason: CreateContainerConfigError
                      namespace: enterprise-search
                  exp_annotations:
                      message: Container enterprise-search/index/alpine has been in CreateContainerConfigError for longer than 15 minutes.
                      runbook: "${runbook_base_url}/namespace-alert-runbooks/container-waiting/"

    # Test the alert doesn't fire if the kube_pod_container_status_waiting_reason is 1 but the reason=CrashLoopBackOff
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="CrashLoopBackOff",pod="index",container="alpine"}'
            values: '1x15'
      alert_rule_test:
          - eval_time: 16m
            alertname: ContainerWaiting
            exp_alerts: []

     # Test alert doesn't fire when the value for kube_pod_container_status_waiting_reason is 0
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="CreateContainerConfigError",pod="index",container="alpine"}'
            values: '1x14 0x5'
      alert_rule_test:
          - eval_time: 15m
            alertname: ContainerWaiting
            exp_alerts: []


    # TC 2 - ContainerImagePullProblem
    # Test alert doesn't fire when the value for kube_pod_container_status_waiting_reason is 0
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="ErrImagePull",pod="index",container="alpine"}'
            values: '0x15'
      alert_rule_test:
          - eval_time: 15m
            alertname: ContainerImagePullProblem
            exp_alerts: []

    # Test the alert fires if the alert has been firing for 15 minutes
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="ErrImagePull",pod="index",container="alpine"}'
            values: '1x15'
      alert_rule_test:
          - eval_time: 16m
            alertname: ContainerImagePullProblem
            exp_alerts:
                - exp_labels:
                      severity: P3-Minor
                      scope: namespace
                      container: alpine
                      pod: index
                      reason: ErrImagePull
                      namespace: enterprise-search
                  exp_annotations:
                      message: Container enterprise-search/index/alpine has been in ErrImagePull and/or ImagePullBackOff for longer than 15 minutes.
                      runbook: "${runbook_base_url}/namespace-alert-runbooks/container-waiting/#errimagepull"

    # Test the alert doesn't fire if the kube_pod_container_status_waiting_reason is 1 but the reason=CrashLoopBackOff
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="CrashLoopBackOff",pod="index",container="alpine"}'
            values: '1x15'
      alert_rule_test:
          - eval_time: 16m
            alertname: ContainerImagePullProblem
            exp_alerts: []

     # Test alert doesn't fire when the value for kube_pod_container_status_waiting_reason is 0
    - interval: 1m
      input_series:
          - series: 'kube_pod_container_status_waiting_reason{namespace="enterprise-search",reason="ErrImagePull",pod="index",container="alpine"}'
            values: '1x14 0x5'
      alert_rule_test:
          - eval_time: 15m
            alertname: ContainerImagePullProblem
            exp_alerts: []
